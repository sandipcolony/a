
a.
from itertools import permutations

def solve_cryptarithmetic(equation):
    unique_letters = set("".join(equation))
    if len(unique_letters) > 10:
        return "Invalid euation: More than 10 unique letters."

    for perm in permutations(range(10), len(unique_letters)):
        mapping = dict(zip(unique_letters, perm))
        if sum(mapping[letter] * 10**i for i, letter in enumerate(equation[0][::-1])) + \
           sum(mapping[letter] * 10**i for i, letter in enumerate(equation[1][::-1])) == \
           sum(mapping[letter] * 10**i for i, letter in enumerate(equation[2][::-1])):
               return {letter: mapping[letter] for letter in unique_letters}

    return "No solution found."

if __name__ == "__main__":
    equation = ["SEND", "MORE", "MONEY"]
    solution = solve_cryptarithmetic(equation)

    if isinstance(solution, dict):
        print("Solution found:")
        for letter, value in solution.items():
            print(f"{letter}: {value}")
    else:
        print(solution)


b.import random
def simple_chatbot():
    print("hello! i am a simple chatbot.type 'exit'to end the chat")
    while True:
        user_input=input("you")
        if user_input.lower()=='exit':
            print("goodbye!")
            break
        if "hello"in user_input.lower():
            print("chatbot:hi there")
        elif "how are you"in user_input.lower():
            print("i am fine what about you")
        elif "your name" in user_input.lower():
            print("chatbot")
        else:
            responses=["intresting!","tell me more","sorry i dont understand",random_response=random.choice(responses)]
            
            print("chatbot:{random_response}")
if __name__=="__main__":
    simple_chatbot()
